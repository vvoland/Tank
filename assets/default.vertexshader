#version 330
layout(location = 0) in vec3 in_Position;
layout(location = 1) in vec2 in_UV;
layout(location = 2) in vec3 in_Normal;

uniform mat4 in_Model;
uniform mat4 in_View;
uniform mat4 in_Projection;
uniform mat4 in_Mvp;
uniform vec4 in_Color;
uniform float in_UvSpeed;

out vec4 vs_out_Color;
out vec2 vs_out_UV;
out vec3 vs_out_Normal;
out vec3 vs_out_FragPos;
out vec3 vs_out_ViewPos;

void main()
{
    vec4 pos = vec4(in_Position, 1.0);
    gl_Position = in_Projection * in_View * in_Model * pos;
    vs_out_Color = in_Color;
    vec2 uv = in_UV;
    uv.y += in_UvSpeed;
    vs_out_UV = uv;
    vs_out_Normal = mat3(transpose(inverse(in_Model))) * in_Normal;
    vs_out_FragPos = (in_Model * pos).xyz;
    vs_out_ViewPos = (inverse(in_View) * vec4(0.0, 0.0, 0.0, 1.0)).xyz;
}
